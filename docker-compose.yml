version: "3"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vault
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - vault-network

  redis:
    image: redis
    container_name: my-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - vault-network

  script-redis:
    image: redis
    container_name: my-script-redis
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - script-redis-data:/data
    networks:
      - vault-network

  qdrant-database:
    image: qdrant/qdrant:v1.3.2
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - vault-network

  s3:
    image: minio/minio:RELEASE.2023-09-27T15-22-50Z
    ports:
      - 9000:9000
      - 42625:42625
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://s3:9000/minio/health/live"]
      interval: 3s
      timeout: 2s
      retries: 10
    volumes:
      - s3-data:/data
    command: server --console-address ":42625" /data
    networks:
      - vault-network

  s3-client:
    image: minio/mc
    depends_on:
      s3:
        condition: service_healthy
    restart: on-failure
    networks:
      - vault-network
    entrypoint: >
      /bin/sh -c "
      mc config host add myminio http://s3:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc alias set myminio http://s3:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};

      mc admin user add myminio ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      mc admin policy attach myminio readwrite --user ${S3_ACCESS_KEY};

      mc mb myminio/${S3_BUCKET};


      exit 0;
      "

  vault-server:
    image: arguflow/vault-server
    build: ./server/
    networks:
      - vault-network
    ports:
      - 8090:8090
    environment:
      - REDIS_URL=${REDIS_URL}
      - QDRANT_URL=${QDRANT_URL}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_EMAIL_ADDRESS=${SENDGRID_EMAIL_ADDRESS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - SALT=${SALT}
      - LIBREOFFICE_PATH=${LIBREOFFICE_PATH}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - COOKIE_SECURE=${COOKIE_SECURE}
      - ALERT_EMAIL=${ALERT_EMAIL}
      - USE_EMBED_SERVER=${USE_EMBED_SERVER}
      - DOCUMENT_UPLOAD_FEATURE=${DOCUMENT_UPLOAD_FEATURE}
      - ONLY_ADMIN_CAN_CREATE_CARDS=${ONLY_ADMIN_CAN_CREATE_CARDS}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - RAG_PROMPT=${RAG_PROMPT}
      - QDRANT_COLLECTION=${QDRANT_COLLECTION}
      - PARSER_COMMAND=${PARSER_COMMAND}
      - EMBEDDING_SERVER_CALL=${EMBEDDING_SERVER_CALL}
      - EMBEDDING_SIZE=${EMBEDDING_SIZE}
      - N_RETRIEVALS_TO_INCLUDE=${N_RETRIEVALS_TO_INCLUDE}
    depends_on:
      - s3
      - qdrant-database
      - redis
      - db

  vault-chat:
    image: arguflow/vault-chat
    build: ./chat/
    networks:
      - vault-network
    ports:
      - 3000:3000
    depends_on:
      - vault-server
    environment:
      - VITE_FRONTMATTER_VALS=${VITE_FRONTMATTER_VALS}
      - VITE_LINES_BEFORE_SHOW_MORE=${VITE_LINES_BEFORE_SHOW_MORE}
      - VITE_DATASET=${DATASET}
      - VITE_API_HOST=${VITE_API_HOST}
      - VITE_SEARCH_URL=${PUBLIC_SEARCH_URL}
      - VITE_YOUTUBE_EMBED_URL=${VITE_YOUTUBE_EMBED_URL}
      - VITE_PLAUSIBLE_HOST=${VITE_PLAUSIBLE_HOST}

  vault-search:
    image: arguflow/vault-search
    build: ./search/
    networks:
      - vault-network
    ports:
      - 3001:3000
    depends_on:
      - vault-server
    environment:
      - API_HOST=${PUBLIC_API_HOST}
      - PUBLIC_HOST=${PUBLIC_SEARCH_URL}
      - PUBLIC_API_HOST=${API_HOST}
      - PUBLIC_TAG_SET_ITEMS=${PUBLIC_TAG_SET_ITEMS}
      - PUBLIC_LINK_ITEMS=${PUBLIC_LINK_ITEMS}
      - PUBLIC_CREATE_EVIDENCE_FEATURE=${PUBLIC_CREATE_EVIDENCE_FEATURE}
      - PUBLIC_DOCUMENT_UPLOAD_FEATURE=${PUBLIC_DOCUMENT_UPLOAD_FEATURE}
      - PUBLIC_SEARCH_QUERIES=${PUBLIC_SEARCH_QUERIES}
      - PUBLIC_LUCKY_ITEMS=${PUBLIC_LUCKY_ITEMS}
      - PUBLIC_FRONTMATTER_VALS=${PUBLIC_FRONTMATTER_VALS}
      - PUBLIC_LINES_BEFORE_SHOW_MORE=${PUBLIC_LINES_BEFORE_SHOW_MORE}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - PLAUSIBLE_HOST=${PLAUSIBLE_HOST}
      - DATASET=${DATASET}
      - OG_DESCRIPTION=${OG_DESCRIPTION}

networks:
  vault-network:
    driver: bridge

volumes:
  redis-data:
  script-redis-data:
  pgdata:
  qdrant_data:
  s3-data:
