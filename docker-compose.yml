version: "3"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vault
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:7.2.2
    container_name: my-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --requirepass ${REDIS_PASSWORD}

  qdrant-database:
    image: qdrant/qdrant:v1.7.0
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - app-network

  s3:
    image: minio/minio:RELEASE.2023-09-27T15-22-50Z
    ports:
      - 9000:9000
      - 42625:42625
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://s3:9000/minio/health/live"]
      interval: 3s
      timeout: 2s
      retries: 10
    volumes:
      - s3-data:/data
    command: server --console-address ":42625" /data
    networks:
      - app-network

  s3-client:
    image: minio/mc
    depends_on:
      s3:
        condition: service_healthy
    restart: on-failure
    networks:
      - app-network
    entrypoint: >
      /bin/sh -c "
      mc config host add myminio http://s3:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc alias set myminio http://s3:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};

      mc admin user add myminio ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      mc admin policy attach myminio readwrite --user ${S3_ACCESS_KEY};

      mc mb myminio/${S3_BUCKET};


      exit 0;
      "

  tika:
    image: apache/tika:2.9.1.0-full
    networks:
      - app-network
    ports:
      - 9998:9998

  server:
    image: arguflow/server
    build: ./server/
    networks:
      - app-network
    ports:
      - 8090:8090
    volumes:
      - ./server/images:/app/images
      - ./server/tantivy:/app/tantivy
    links:
      - tika:tika
    environment:
      - REDIS_URL=${REDIS_URL}
      - QDRANT_URL=${QDRANT_URL}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_EMAIL_ADDRESS=${SENDGRID_EMAIL_ADDRESS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - SALT=${SALT}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - COOKIE_SECURE=${COOKIE_SECURE}
      - ALERT_EMAIL=${ALERT_EMAIL}
      - USE_EMBED_SERVER=${USE_EMBED_SERVER}
      - DOCUMENT_UPLOAD_FEATURE=${DOCUMENT_UPLOAD_FEATURE}
      - ONLY_ADMIN_CAN_CREATE_CARDS=${ONLY_ADMIN_CAN_CREATE_CARDS}
      - RAG_PROMPT=${RAG_PROMPT}
      - QDRANT_COLLECTION=${QDRANT_COLLECTION}
      - PARSER_COMMAND=${PARSER_COMMAND}
      - EMBEDDING_SERVER_CALL=${EMBEDDING_SERVER_CALL}
      - EMBEDDING_SIZE=${EMBEDDING_SIZE}
      - N_RETRIEVALS_TO_INCLUDE=${N_RETRIEVALS_TO_INCLUDE}
      - ALWAYS_REQUIRE_AUTH=${ALWAYS_REQUIRE_AUTH}
      - ADMIN_USER_EMAIL=${ADMIN_USER_EMAIL}
      - ADMIN_USER_PASSWORD=${ADMIN_USER_PASSWORD}
      - DUPLICATE_DISTANCE_THRESHOLD=${DUPLICATE_DISTANCE_THRESHOLD}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - DOCUMENT_DOWNLOAD_FEATURE=${DOCUMENT_DOWNLOAD_FEATURE}
      - TIKA_URL=${TIKA_URL}
      - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
      - OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
      - OIDC_AUTH_REDIRECT_URL=${OIDC_AUTH_REDIRECT_URL}
      - OIDC_ISSUER_URL=${OIDC_ISSUER_URL}

  chat:
    image: arguflow/chat
    build: ./chat/
    networks:
      - app-network
    ports:
      - 3000:3000
    environment:
      - VITE_FRONTMATTER_VALS=${VITE_FRONTMATTER_VALS}
      - VITE_LINES_BEFORE_SHOW_MORE=${VITE_LINES_BEFORE_SHOW_MORE}
      - VITE_DATASET=${DATASET}
      - VITE_API_HOST=${VITE_API_HOST}
      - VITE_SEARCH_URL=${VITE_SEARCH_URL}
      - VITE_YOUTUBE_EMBED_URL=${VITE_YOUTUBE_EMBED_URL}
      - VITE_PLAUSIBLE_HOST=${VITE_PLAUSIBLE_HOST}
      - VITE_SHOW_GITHUB_STARS=${VITE_SHOW_GITHUB_STARS}
      - VITE_CHAT_VOTE_FEATURE=${VITE_CHAT_VOTE_FEATURE}

  search:
    image: arguflow/search
    build: ./search/
    networks:
      - app-network
    ports:
      - 3001:3000
    environment:
      - PUBLIC_API_HOST=${PUBLIC_API_HOST}
      - PUBLIC_FILTER_ITEMS=${PUBLIC_FILTER_ITEMS}
      - PUBLIC_CREATE_EVIDENCE_FEATURE=${PUBLIC_CREATE_EVIDENCE_FEATURE}
      - PUBLIC_DOCUMENT_UPLOAD_FEATURE=${PUBLIC_DOCUMENT_UPLOAD_FEATURE}
      - PUBLIC_SEARCH_QUERIES=${PUBLIC_SEARCH_QUERIES}
      - PUBLIC_FRONTMATTER_VALS=${PUBLIC_FRONTMATTER_VALS}
      - PUBLIC_LINES_BEFORE_SHOW_MORE=${PUBLIC_LINES_BEFORE_SHOW_MORE}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - PLAUSIBLE_HOST=${PLAUSIBLE_HOST}
      - DATASET=${DATASET}
      - OG_DESCRIPTION=${OG_DESCRIPTION}
      - PUBLIC_ALWAYS_REQUIRE_AUTH=${PUBLIC_ALWAYS_REQUIRE_AUTH}
      - PUBLIC_IMAGE_RANGE_START_KEY=${PUBLIC_IMAGE_RANGE_START_KEY}
      - PUBLIC_IMAGE_RANGE_END_KEY=${PUBLIC_IMAGE_RANGE_END_KEY}
      - PUBLIC_DATE_RANGE_VALUE=${PUBLIC_DATE_RANGE_VALUE}
      - PUBLIC_SHOW_GITHUB_STARS=${PUBLIC_SHOW_GITHUB_STARS}
      - SUGGESTED_QUERIES=${SUGGESTED_QUERIES}
      - PUBLIC_SEARCH_VOTE_FEATURE=${PUBLIC_SEARCH_VOTE_FEATURE}

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=aintsecure
      - KC_DATABASE=postgres
      - KC_DATABASE_URL=jdbc:postgresql://localhost:5434/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=password
    entrypoint: "/opt/keycloak/bin/kc.sh start-dev --import-realm --spi-theme-static-max-age=-1 --spi-theme-cache-themes=false --spi-theme-cache-templates=false"
    volumes:
      - keycloak-data:/opt/keycloak/data
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./keycloak/themes/arguflow:/opt/keycloak/themes/arguflow
    ports:
      - 8080:8080
    networks:
      - app-network

  keycloak-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
    volumes:
      - pg-keycloak-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  script-redis-data:
  pgdata:
  qdrant_data:
  s3-data:
  keycloak-data:
  pg-keycloak-data:
