{{- $domain := .Values.domain }}
{{- $externalDomain := .Values.externalDomain }}
{{- if eq .Values.environment "local" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: tcp-services
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: tcp-services
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: trieve
    meta.helm.sh/release-namespace: default
data:
  6379: "ingress-nginx/trieve-redis-master:6379"
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-redis
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-redis
spec:
  type: LoadBalancer
  ports:
    - name: proxied-tcp-6379
      port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app.kubernetes.io/name: ingress-redis
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-dashboard
spec:
  ingressClassName: nginx
  rules:
    - host: dashboard.{{ $domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dashboard-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-chat
spec:
  ingressClassName: nginx
  rules:
    - host: chat.{{ $domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chat-service
                port:
                  number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-server
spec:
  ingressClassName: nginx
  rules:
    - host: api.{{ $domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: server-service
                port:
                  number: 8090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-search
spec:
  ingressClassName: nginx
  rules:
    - host: search.{{ $domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: search-service
                port:
                  number: 3001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-keycloak
spec:
  ingressClassName: nginx
  rules:
    - host: oidc.{{ $domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-s3
spec:
  ingressClassName: nginx
  rules:
    - host: data.{{ $domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio-service
                port: 
                  number: 9000
{{- end }}
{{- if (eq .Values.environment "aws") }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-dashboard
  labels:
    app: trieve
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    external-dns.alpha.kubernetes.io/hostname: "dashboard.{{ $externalDomain }}"
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dashboard-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-chat
  labels:
    app: trieve
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    external-dns.alpha.kubernetes.io/hostname: "chat.{{ $externalDomain }}"
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chat-service
                port:
                  number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-server
  labels:
    app: trieve
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    external-dns.alpha.kubernetes.io/hostname: "api.{{ $externalDomain }}"
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: server-service
                port:
                  number: 8090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-search
  labels:
    app: trieve
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    external-dns.alpha.kubernetes.io/hostname: "search.{{ $externalDomain }}"
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: search-service
                port:
                  number: 3001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-keycloak
  labels:
    app: trieve
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    external-dns.alpha.kubernetes.io/hostname: "oidc.{{ $externalDomain }}"
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak-service
                port:
                  number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-s3
  labels:
    app: trieve
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    external-dns.alpha.kubernetes.io/hostname: "data.{{ $externalDomain }}"
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: minio-service
                port:
                  number: 9000
{{- end }}
