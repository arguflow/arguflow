environment: local # Set to aws if deploying to 
useGpu: false
containers:
  server:
    tag: latest
    resources: {}
  ingest:
    tag: latest
    resources: {}
  file_worker:
    tag: latest
    resources: {}
  delete_worker:
    tag: latest
    resources: {}
  group_worker:
    tag: latest
    resources: {}
  sync_qdrant:
    tag: latest
    resources: {}
  bktree_worker:
    tag: latest
    resources: {}
  word_worker:
    tag: latest
    resources: {}
  word_id_cronjob:
    tag: latest
    resources: {}
  clone_qdrant:
    tag: latest
    resources: {}
  search:
    tag: latest
    resources: {}
  chat:
    tag: latest
    resources: {}
  dashboard:
    tag: latest
    resources: {}
  clustering_cron:
    tag: latest
  clickhouse_collapse:
    tag: latest
domains:
  dashboard:
    host: dashboard.localtrieve.com
    class: nginx
  server:
    host: api.localtrieve.com
    class: nginx
  search:
    host: search.localtrieve.com
    class: nginx
  chat:
    host: chat.localtrieve.com
    class: nginx
postgres:
  dbURI: "postgres://postgres:password@postgres.default.svc.cluster.local:5432/trieve"
config:
  vite:
    apiHost: http://api.localtrieve.com/api
    searchUiUrl: http://search.localtrieve.com
    chatUiUrl: http://chat.localtrieve.com
    sentryChatDsn: ""
    dashboardUrl: http://dashboard.localtrieve.com
  redis:
    connections: 3
    uri: "redis://:@redis.default.svc.cluster.local:6379"
  qdrant:
    qdrantUrl: http://qdrant.default.svc.cluster.local:6334
    apiKey: "qdrant-api-key"
    quantizeVectors: false  # If set to true will binary quantize
    replicationFactor: 2
    shardCount: 12
    vectorSizes:
      - 768
      - 1024
  analytics:
    enabled: true
    clickhouseDB: default
    clickhouseUser: default
    clickhousePassword: clickhouse
    clickhouseUrl: http://clickhouse-trieve-clickhouse.default.svc.cluster.local:8123
  delete_worker:
    batch_size: 10000
  trieve:
    batch_limit: 120
    bm25Active: true
    unlimited: true
    cookieSecure: false
    baseServerUrl: http://api.localtrieve.com
    embeddingServerOrigin: http://embedding-jina.default.svc.cluster.local
    sparseServerQueryOrigin: http://embedding-splade-query.default.svc.cluster.local
    sparseServerDocOrigin: http://embedding-splade-doc.default.svc.cluster.local
    embeddingServerOriginBGEM3: http://embedding-m3.default.svc.cluster.local
    embeddingServerOriginJinaCode: http://api.jina.ai/v1
    jinaCodeApiKey: jina_************************************************************
    rerankerServerOrigin: http://embedding-reranker.default.svc.cluster.local
    salt: goodsaltisveryyummy
    secretKey: 1234512345123451234512345123451234512345123451234512345123451234512345123451234h
    adminApiKey: "admin"
    anthropicAPIKey: ""
    subtraceToken: ""
  oidc:
    clientSecret: "YllmLDTy67MbsUBrUAWvQ7z9aMq0QcKx"
    clientId: "trieve"
    issuerUrl: "http://trieve-keycloak-service:8080/realms/trieve"
    authRedirectUrl: "http://trieve-keycloak-service:8080/realms/trieve/protocol/openid-connect/auth"
  smtp:
    relay: ""
    username: ""
    password: ""
    emailAddress: ""
  llm:
    apiKey: ""
  openai:
    apiKey: "sk-************************************************************"
    baseUrl: https://api.openai.com/v1
  s3:
    endpoint: ""
    accessKey: ""
    secretKey: ""
    bucket: ""
  stripe:
    secret: ""
    webhookSecret: ""
clone: {}
embeddings:
  - name: jina
    revision: main
    model: jinaai/jina-embeddings-v2-base-en
    args: []
  - name: splade-doc
    model: naver/efficient-splade-VI-BT-large-doc
    revision: main
    args: ["--pooling", "splade"]
  # - name: splade-query
  #   model: naver/efficient-splade-VI-BT-large-query
  #   revision: main
  #   args: ["--pooling", "splade"]
  # - name: m3
  #   model: BAAI/bge-m3
  #   revision: main
  #   args: []
  # - name: reranker
  #   model: BAAI/bge-reranker-large
  #   revision: refs/pr/4
  #   args: []
