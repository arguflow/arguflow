---
import SearchForm from "../components/SearchForm";
import Footer from "../components/Footer.astro";
import type {
  CardMetadataWithVotes,
  UsersWithTotalPagesDTO,
} from "../../utils/apiTypes";
import type { Filters } from "../components/ResultsPage";
import HomeLayout from "../layouts/HomeLayout.astro";
import { RecentCardsTable } from "../components/RecentCardsTable";
import { FirstVisitPopUp } from "../components/FirstVisitPopUp";

const apiHost = import.meta.env.API_HOST as string;

const requestParams = Astro.request.url.split("?")[1];
const params = new URLSearchParams(requestParams);
const page = Number(params.get("page")) || 1;
const filters: Filters = {
  dataTypes: params.get("datatypes")?.split(",") ?? [],
  links: params.get("links")?.split(",") ?? [],
};
const searchType: string = params.get("searchType") ?? "search";

let topUsersWithPages: UsersWithTotalPagesDTO = {
  total_user_pages: 1,
  users: [],
};
let recentCards: CardMetadataWithVotes[] = [];
try {
  const topUsersPromise = fetch(`${apiHost}/top_users/${page}`)
    .then((response) => response.json())
    .then((topUsersCardsResult) => {
      topUsersWithPages = topUsersCardsResult as UsersWithTotalPagesDTO;
    });

  const recentCardsPromise = fetch(`${apiHost}/recent_cards/${page}`)
    .then((response) => response.json())
    .then((recentCardsResult) => {
      recentCards = recentCardsResult as CardMetadataWithVotes[];
    });

  await Promise.all([topUsersPromise, recentCardsPromise]);
} catch (e) {
  console.error(e);
}
---

<HomeLayout>
  <FirstVisitPopUp client:only />
  <div class="space-y mt-12 flex w-full flex-col items-center">
    <div class="flex w-full items-center justify-center">
      <a class="flex items-center justify-center" href="/">
        <img class="w-12" src="/logo_transparent.png" alt="Logo" />
        <h1 class="text-4xl">
          Arguflow<span class="text-magenta">Search</span>
        </h1>
      </a>
    </div>
    <div class="text-center text-lg">
      Discover More with <a
        href="https://en.wikipedia.org/wiki/Semantic_search"
        class="text-turquoise-500 underline dark:text-acid-500"
        >Semantic Search</a
      >: Find Meaningful Results, Not Just Exact Matches
    </div>
    <div class="mt-8 w-full max-w-4xl px-4 sm:px-8 md:px-20">
      <SearchForm filters={filters} searchType={searchType} client:load />
    </div>
  </div>
  <div class="my-16 sm:my-24">
    <RecentCardsTable recentCards={recentCards} client:load />
  </div>
  <div class="flex-1"></div>
  <Footer />
</HomeLayout>
